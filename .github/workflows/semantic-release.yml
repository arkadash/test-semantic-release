name: Semantic Release

on:
  push:
    branches:
      - production
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package*.json'  # This covers both package.json and package-lock.json in any directory
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install semantic-release dependencies
        run: |
          npm install --save-dev \
            semantic-release@21.0.1 \
            @semantic-release/git@10.0.1 \
            @semantic-release/github@9.0.3 \
            @semantic-release/changelog@6.0.3 \
            @semantic-release/commit-analyzer@10.0.1 \
            @semantic-release/release-notes-generator@11.0.7 \
            @semantic-release/npm@10.0.3 \
            conventional-changelog-conventionalcommits@6.1.0

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create semantic-release config
        run: |
          cat << EOF > .releaserc.json
          {
            "branches": ["production"],
            "plugins": [
              ["@semantic-release/commit-analyzer", {
                "preset": "angular",
                "parserOpts": {
                  "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"]
                },
                "releaseRules": [
                  {"breaking": true, "release": "major"},
                  {"type": "feat", "release": "minor"},
                  {"type": "fix", "release": "patch"},
                  {"type": "docs", "release": "patch"},
                  {"type": "perf", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "style", "release": "patch"},
                  {"type": "test", "release": "patch"},
                  {"type": "chore", "release": "patch"},
                  {"type": "revert", "release": "patch"},
                  {"type": "ci", "release": "patch"},
                  {"type": "build", "release": "patch"},
                  {"scope": "*", "release": "patch"},
                  {"subject": "*", "release": "patch"},
                  {"message": "*", "release": "patch"}
                ]
              }],
              ["@semantic-release/release-notes-generator", {
                "preset": "conventionalcommits",
                "presetConfig": {
                  "types": [
                    {"type": "feat", "section": "‚ú® Features"},
                    {"type": "fix", "section": "üêõ Bug Fixes"},
                    {"type": "docs", "section": "üìö Documentation"},
                    {"type": "perf", "section": "‚ö° Performance"},
                    {"type": "refactor", "section": "‚ôªÔ∏è Refactoring"},
                    {"type": "style", "section": "üíÑ Styling"},
                    {"type": "test", "section": "üß™ Tests"},
                    {"type": "chore", "section": "üîß Chores"},
                    {"type": "ci", "section": "üë∑ CI"},
                    {"type": "revert", "section": "‚è™ Reverts"},
                    {"type": "", "section": "Changes", "hidden": false},
                    {"type": "*", "section": "Misc Changes", "hidden": false}
                  ]
                },
                "writerOpts": {
                  "groupBy": "type",
                  "commitGroupsSort": "title",
                  "commitsSort": ["subject"],
                  "noteGroupsSort": "title",
                  "transform": {
                    "type": "conventionalcommits",
                    "issuePrefixes": ["JIRA-"],
                    "defaultType": "Changes",
                    "defaultScope": "",
                    "defaultSubject": "General updates"
                  }
                }
              }],
              ["@semantic-release/changelog", {
                "changelogFile": "CHANGELOG.md"
              }],
              ["@semantic-release/github", {
                "assets": [],
                "successComment": "üéâ This PR is included in version \${nextRelease.version}",
                "releasedLabels": ["shipped"],
                "addReleases": "bottom"
              }],
              ["@semantic-release/git", {
                "assets": ["CHANGELOG.md", "package.json", "package-lock.json"],
                "message": "chore(release): \${nextRelease.version} [skip ci]\n\nJIRA Tickets: \${nextRelease.notes}"
              }]
            ]
          }
          EOF

      - name: Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: 'github-actions[bot]'
          GIT_AUTHOR_EMAIL: 'github-actions[bot]@users.noreply.github.com'
          GIT_COMMITTER_NAME: 'github-actions[bot]'
          GIT_COMMITTER_EMAIL: 'github-actions[bot]@users.noreply.github.com'
        run: npx semantic-release